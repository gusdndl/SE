using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class player : MonoBehaviour
{
    int start_time = 200;
    int termcurrent = 300;
    int termmax = 300;
    int ftermcurrent = 1000;
    int ftermmax = 1000;
    int wallpos = 0;
    /*int roadctc = 54;
    int roadctm = 54;*/
    int playerpos = 3;
    public static int leveluptimes2 = 0;
    float currentwallspeed = 0f;
    float levelupterm = 10f;
    public static float fuelvalue = 100f;
    public static int life = -1;

    wall wall;

    public Animator anim;

    [SerializeField]
    GameObject walls;
    [SerializeField]
    GameObject wallspot_1;
    [SerializeField]
    GameObject wallspot_2;
    [SerializeField]
    GameObject wallspot_3;
    [SerializeField]
    GameObject wallspot_4;
    [SerializeField]
    GameObject wallspot_5;
    /*[SerializeField]
    GameObject road;
    [SerializeField]
    GameObject roadspot;*/
    [SerializeField]
    GameObject gameoverUI;
    [SerializeField]
    GameObject gamestartUI;
    [SerializeField]
    GameObject img1;
    [SerializeField]
    GameObject img2;
    [SerializeField]
    GameObject img3;
    [SerializeField]
    Slider Pspeed;
    [SerializeField]
    Slider fuel;
    [SerializeField]
    GameObject fuel_pre;

    void Start()
    {
        gameoverUI.gameObject.SetActive(false);
        anim = GetComponent<Animator>();
        currentwallspeed = wall.speed;
        gamestartUI.gameObject.SetActive(true);
        currentwallspeed = wall.speed;
    }

    void playerMoving() //삭제 예정
    {
        if(Input.GetKeyDown(KeyCode.RightArrow)&& this.transform.position.x <= 16)
        {
            this.transform.Translate(Vector3.right * 15);
        }
        if (Input.GetKeyDown(KeyCode.LeftArrow) && this.transform.position.x >= -16)
        {
            this.transform.Translate(Vector3.right * -15);
        }
    }

    void playerMoving2() //애니메이션 생성 후 사용
    {
        if (this.transform.position.x == -30)
        {
            if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                anim.SetInteger("move", 1);
            }
        }
        else if (this.transform.position.x == -15)
        {
            if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                anim.SetInteger("move", 3);
            }
            else if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                anim.SetInteger("move", 2);
            }
        }
        else if (this.transform.position.x == 0)
        {
            if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                anim.SetInteger("move", 5);
            }
            else if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                anim.SetInteger("move", 4);
            }
        }
        else if (this.transform.position.x == 15)
        {
            if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                anim.SetInteger("move", 7);
            }
            else if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                anim.SetInteger("move", 6);
            }
        }
        else if (this.transform.position.x == 30)
        {
            if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                anim.SetInteger("move", 8);
            }
        }
    }

    void wallCreating()
    {
        if (termcurrent >= termmax)
        {
            termcurrent = 0;
            wallpos = Random.Range(1,6);
            if (wallpos == 1)
            {
                Instantiate(walls, wallspot_1.transform.position, wallspot_1.transform.rotation);
            } else if (wallpos == 2)
            {
                Instantiate(walls, wallspot_2.transform.position, wallspot_2.transform.rotation);
            } else if (wallpos == 3)
            {
                Instantiate(walls, wallspot_3.transform.position, wallspot_3.transform.rotation);
            } else if (wallpos == 4)
            {
                Instantiate(walls, wallspot_4.transform.position, wallspot_4.transform.rotation);
            } else
            {
                Instantiate(walls, wallspot_5.transform.position, wallspot_5.transform.rotation);
            }
        } else if (termcurrent <= termmax)
        {
            termcurrent++;
        }
    }

    void fuelCreating()
    {
        if (ftermcurrent >= ftermmax)
        {
            ftermcurrent = 0;
            wallpos = Random.Range(1, 6);
            if (wallpos == 1)
            {
                Instantiate(fuel_pre, wallspot_1.transform.position, wallspot_1.transform.rotation);
            }
            else if (wallpos == 2)
            {
                Instantiate(fuel_pre, wallspot_2.transform.position, wallspot_2.transform.rotation);
            }
            else if (wallpos == 3)
            {
                Instantiate(fuel_pre, wallspot_3.transform.position, wallspot_3.transform.rotation);
            }
            else if (wallpos == 4)
            {
                Instantiate(fuel_pre, wallspot_4.transform.position, wallspot_4.transform.rotation);
            }
            else
            {
                Instantiate(fuel_pre, wallspot_5.transform.position, wallspot_5.transform.rotation);
            }
        }
        else if (ftermcurrent <= ftermmax)
        {
            ftermcurrent++;
        }
    }

    /*
    void roadCreating()
    {
        if (roadctc >= roadctm)
        {
            roadctc = 0;
            Instantiate(road, roadspot.transform.position, this.transform.rotation);
        }
        if (roadctc <= roadctm)
        {
            roadctc++;
        }
    }
    */

    void speedAndFuel()
    {
        Pspeed.value = wall.speed;
        fuelvalue -= Time.deltaTime * 2;
        fuel.value = fuelvalue;
    }

    void levelup()
    {
        if (levelupterm > 0)
        {
            levelupterm -= Time.deltaTime;
        }
        else if (levelupterm <= 0)
        {
            currentwallspeed += 50;
            leveluptimes2++;
            if (termmax>80)
            {
                termmax -= 20;
            }
            levelupterm = 10f;
        }

        if ((currentwallspeed >= wall.speed) && wall.speed < 1200f && fuelvalue > 0)
        {
            wall.speed += Time.deltaTime * 20;
        }

        if (leveluptimes2 >= 1 && leveluptimes2 < 6)
        {
            wallCreating();
            fuelCreating();
        }
        else if (leveluptimes2 >= 6)
        {
            wallCreating();
            wallCreating();
            fuelCreating();
            fuelCreating();
        }

    }

    void notenoughfuel()
    {
        if (fuelvalue <= 0 && wall.speed > 0)
        {
            wall.speed -= Time.deltaTime * 300;
        }
        if (wall.speed <= 1)
        {
            wall.speed = 0;
            life = 0;
        }
    }

    void setUI()
    {
        if (life == 3)
        {
            img1.gameObject.SetActive(true);
        }
        else if (life == 2)
        {
            img1.gameObject.SetActive(false);
            img2.gameObject.SetActive(true);
        }
        else if (life == 1)
        {
            img2.gameObject.SetActive(false);
            img3.gameObject.SetActive(true);
        }
    }

    void startdelay()
    {
        if (start_time >= 0)
        {
            start_time--;
        }
        else
        {
            wallCreating();
        }
    }

    void gameover()
    {
        gameoverUI.gameObject.SetActive(true);
        wall.speed = 0f;
        anim.SetTrigger("restart");
        anim.SetInteger("move", -1);
    }

    void Update()
    {
        if (life>=1)
        {
            playerMoving2();
            speedAndFuel();
            setUI();
            notenoughfuel();
            levelup();
            startdelay();
        }
        else if (life == 0)
        {
            gameover();
        }
    }

    private void OnCollisionEnter(Collision collision)
    {
        if (collision.collider.tag == "wall")
        {
            life--;
        }
        if (collision.collider.tag == "fuel")
        {
            fuelvalue += 20;
        }
    }
}

public class wall : MonoBehaviour
{
    void Start()
    {
        
    }

    player player;

    public static float speed = 800f;

    void Update()
    {
        this.transform.Translate(Vector3.back * speed * Time.deltaTime);
        if (this.transform.position.z <= -20 || player.life == 0 || this.transform.position.y >=10 || this.transform.position.y <=0)
        {
            Destroy(this.gameObject,.0f);
        }
    }
}

public class startbutton : MonoBehaviour
{

    player player;

   public void gamestart ()
    {
        player.life = 3;
        gameObject.SetActive(false);
    }
}

public class restartbutton : MonoBehaviour
{

    [SerializeField]
    GameObject gamestartUI;
    [SerializeField]
    GameObject img1;
    [SerializeField]
    GameObject img3;

    wall wall;
    player player;

    public void restart_button ()
    {
        player.life = -1;
        gameObject.SetActive(false);
        gamestartUI.gameObject.SetActive(true);
        wall.speed = 800;
        img3.gameObject.SetActive(false);
        img1.gameObject.SetActive(true);
        player.leveluptimes2 = 0;
        player.fuelvalue = 100f;
    }
}

public class camera : MonoBehaviour
{

    [SerializeField]
    GameObject player;

    void Update()
    {
        this.transform.position = new Vector3(player.transform.position.x, this.transform.position.y, this.transform.position.z);
    }
}

public class road : MonoBehaviour
{
    int speed = 100;

    void Update()
    {
        this.transform.Translate(Vector3.back * speed * Time.deltaTime);
        if (this.transform.position.z <= -150)
        {
            Destroy(this.gameObject, .0f);
        }
    }
}
